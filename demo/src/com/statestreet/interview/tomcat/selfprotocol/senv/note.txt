reference from https://blog.csdn.net/d_x_program/article/details/75038200

JAVA默认提供了对file,ftp,gopher,http,https,jar,mailto,netdoc协议的支持。当我们要利用这些协议来创建应用时，主要会涉及到如下几个类：
      1.java.net.URL：URL资源
      2.java.net.URLConnection：各种URL资源连接器
    例如，当我们利用HTTP协议获取Web资源时，通常的过程如下：
    URL url = new URL("http://www.163.com");  
	URLConnection conneciotn = url.openConnection();
	
	URL和URLConnection是如何做到对协议支持的呢？在它们的内部，主要涉及到了如下几个类：
        1.URLStreamHandler：协议的流处理器，负责对特定URL协议的解析，并创建符合当前协议的URLConnection；
        2.URLStreamHandlerFactory：协议处理工厂，负责为特定协议找到正确的URLStreamHandler。
        当利用URL对象创建资源时，其构造函数在去掉协议字段后将其传给URLStreamHandlerFactory，由该工厂来接受协议，为该协议找到并创建适当的URLStreamHandler实现类，
        最后存储在URL对象的一个字段中（即URL类中transient修饰的URLStreamHandler成员属性）。
       URLStreamHandler和URLConnection总是成对出现的。因此，若要实现对新协议的支持时，需同时实现这两个抽象类，分别负责对协议的解析，以及与服务器的交互（数据转换等）。
      另外，JAVA是如何识别当前URL协议该由哪个URLStreamHandler和URLConnection来处理的呢？在创建URL对象时，其内部调用了一个getURLStreamHandler(String protocol)静态方法，
      它将根据协议的名称来找到对应的URLStreamHandler实现类，其查找规则如下：
     1)检测是否创建了URLStreamHandlerFactory对象：如果创建，则直接使用createURLStreamHandler(String protocol)方法创建的协议处理器，否则进入步骤2）；
     2)在java.protocol.handler.pkgs系统属性指定的包中查找与协议同名的子包和名为Handler的类，即负责处理当前协议的URLStreamHandler实现类必须在的<包名>.<协议名定义的包>中，并且类名称必须为Handler。例如:com.company.net.protocol.rdp包中的Handler类将用于处理RDP协议。若仍未找到则进入步骤3）；
     3)在JDK rt.jar中的sun.net.www.protocol.<name>包中查找Handler类。例如，若当前协议为ftp，则URL所使用协议处理器就应该为sun.net.www.protocol.ftp包中的Handler类。如下图：
	
	  