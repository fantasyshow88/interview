1.用户第一次访问servlet创建servlet实例,驻留在内存里响应后续的请求，然后执行init初始化，客户端每次请求调用service方法，servlet摧毁的时候调用destory,
那什么时候调用destory方法，当server shutdown的时候或者servlet从web容器移除的时候。除非配置了load-on-starup (数字越小优先启动)标签，就在server启动的时候就调用 init

当web.xml中没有配置相关servelt，可是当我们访问比如静态页面时是用缺省的servelt来处理这个请求的，一般由web server 实现这个servlet
浏览器访问web资源时都是通过servlet请求资源，即使这个servelt没有配置则调用缺省的servelt来访问web资源
要覆盖缺省servelet可以在web.xml中配置servler mapping为 "/"

2.servlet扩展名
a.以/开头：/*, 匹配所有的
b.*.do

3.servlet线程安全解决方案
a.用synchronized同步代码块（太慢了）
b.implements SingleThreadModel接口，如果第一个请求servlet没有响应完，当第二个请求时发现第一个请求还没完成则创建一个新的servlet（浪费内存）

3.servletConfig:读取servlet配置文件

4.ServletContext:代表当前web应用
a.保存应用程序范围的变量
b.读取文件资源

5.在web应用中修改配置文件后每次想读取最新的配置文件信息，不需要重启server的情况下,不能通过类装载去读，因为配置文件只装载一次，第二次读的还是旧的资源，可通过以下方式读取：
		String url = this.getClass().getClassLoader().getResource("/db.properties").getPath();
		FileInputStream in = new FileInputStream(url);
		

